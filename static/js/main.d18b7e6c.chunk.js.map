{"version":3,"sources":["components/Enter.js","components/Signup.js","components/Login.js","components/Manager.js","App.js","serviceWorker.js","index.js"],"names":["Enter","props","className","id","to","Signup","useState","numLbl","setNumLbl","txtLbl","setTxtLbl","workerNumber","setWorkerNumber","workerName","setWorkerName","forklift","setForklift","newWorker","name","number","products","counter","Form","Group","Label","Control","type","placeholder","onChange","e","value","target","length","c","i","Check","label","defaultChecked","onClick","k","workers","toString","alert","pushNewWorker","Login","num","setNum","setName","welcome","setWelcome","redirect2","setRedirect2","setCounter","push","afterFilter","filter","inPlace","isShow","console","log","changedProducts","map","element","key","color","logedOut","Manager","Table","striped","bordered","hover","App","setWorkers","setProducts","productsArray","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d18b7e6c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Enter(props) {\r\n    return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-4\"></div>\r\n        <div className=\"col-4\" id=\"box\">\r\n          <h2>Logistics Management</h2>\r\n          <Link to=\"/signup\"><div><button className=\"btn\">Sign Up</button></div></Link>\r\n          <Link to=\"/login\"><button className=\"btn\">Log In</button></Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Enter;","import React, {useState} from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Signup(props) {\r\n    const [numLbl, setNumLbl] = useState(\"\");\r\n    const [txtLbl, setTxtLbl] = useState(\"the name must contain minimum 4 characters. \");\r\n    const [workerNumber, setWorkerNumber] = useState();\r\n    const [workerName, setWorkerName] = useState(\"\");\r\n    const [forklift, setForklift] = useState(\"no\");\r\n\r\n\r\n    const newWorker = {\r\n        name: workerName,\r\n        number: workerNumber,\r\n        forklift: forklift,\r\n        products: '',\r\n        counter: 0\r\n    }\r\n\r\n\r\n    function handleChange(e){\r\n        const value = e.target.value;\r\n        setWorkerNumber(value);\r\n        if(value.length<5 || value.length>5){\r\n            setNumLbl(\"the number must be with 5 digits.\")\r\n        } else {\r\n            setNumLbl(\"\")\r\n        }\r\n    }\r\n\r\n    function handleNChange(e){\r\n        const value = e.target.value;\r\n        setWorkerName(value);\r\n        let c=0;\r\n        if(value.length>4){\r\n            for(let i=0;i<value.length;i++){\r\n                if(value[i]>='A' && value[i]<='z' || value[i]===' '){\r\n                  if(value[i]===' '){\r\n                      c++;\r\n                  }\r\n                } \r\n            }\r\n            if(c>0){\r\n                setTxtLbl(\"\")\r\n            } else {\r\n                setTxtLbl(\"the name must contain minimum 4 characters. \");\r\n            }\r\n        } else {\r\n            setTxtLbl(\"the name must contain minimum 4 characters. \");\r\n        }\r\n    }\r\n\r\n    function handleCreate(){\r\n        let c=0;\r\n        if(numLbl===\"\" && txtLbl===\"\"){\r\n            for(let k=0;k<props.workers.length;k++){\r\n                let newWorkersNumber = props.workers[k].number.toString();\r\n                if(newWorkersNumber === workerNumber){\r\n                    alert(\"This worker is already in the system\");\r\n                    c++; \r\n                } \r\n            }\r\n            if(c === 0){\r\n                props.pushNewWorker(newWorker);\r\n            }\r\n        } else {\r\n            alert(\"You need to fix the details.\")\r\n        }\r\n    }\r\n\r\n    function radioChange(e){\r\n        const value = e.target.value;\r\n        if(value === \"yes\"){\r\n            setForklift(\"yes\")\r\n        } else {\r\n            setForklift(\"no\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-4\"></div>\r\n          <div className=\"col-4\" id=\"box\">\r\n            <h2>Sign Up</h2>\r\n            <Form>\r\n                <Form.Group className=\"row\">\r\n                <Form.Label className=\"col-4 lbl\">NO.</Form.Label>\r\n                    <Form.Control className=\"input\" type=\"number\" placeholder=\"Worker Number\" onChange={handleChange} />\r\n                    <div className=\"col-5\"></div>\r\n                    <Form.Label className=\"errLbl\">{numLbl}</Form.Label>\r\n                </Form.Group>\r\n                <Form.Group className=\"row\">\r\n                <Form.Label className=\"col-4 lbl\">FullName</Form.Label>\r\n                    <Form.Control className=\"input\" type=\"text\" placeholder=\"Worker Name\" onChange={handleNChange} />\r\n                    <div className=\"col-3\"></div>\r\n                    <Form.Label className=\"errLbl\">{txtLbl}</Form.Label>\r\n                </Form.Group>\r\n                <div className=\"row\">\r\n                <Form.Label className=\"col-4\">Forklift truck</Form.Label>\r\n                <Form.Group className=\"row radio\" onChange={radioChange}>\r\n                    <div className=\"col-2\"></div>\r\n                <Form.Check\r\n          type=\"radio\"\r\n          label=\"yes\"\r\n          name=\"formHorizontalRadios\"\r\n          value=\"yes\"\r\n          id=\"formHorizontalRadios1\"\r\n        />\r\n        <div className=\"col-1\"></div>\r\n        <Form.Check\r\n          type=\"radio\"\r\n          label=\"no\"\r\n          name=\"formHorizontalRadios\"\r\n          value=\"no\"\r\n          id=\"formHorizontalRadios2\" defaultChecked\r\n        />\r\n                </Form.Group>\r\n                </div>\r\n                </Form>\r\n            <Link to='/'><button className=\"btn2\" onClick={handleCreate}>Create</button></Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Signup;","import React, {useState} from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nfunction Login(props) {\r\n    const [num,setNum] = useState();\r\n    const [name,setName] = useState(\"\");\r\n    const [forklift, setForklift] = useState(\"\");\r\n    const [welcome,setWelcome] = useState(false);\r\n    const [redirect2, setRedirect2] = useState(false);\r\n    const [counter, setCounter] = useState('');\r\n\r\n    if (redirect2) {\r\n        return <Redirect push to=\"/manager\" />;\r\n    }\r\n\r\n    function logedOut(){\r\n        props.logedOut(num, afterFilter, counter);\r\n    }\r\n    let afterFilter = props.products.filter(function(i){\r\n        return i.inPlace === false;\r\n    })\r\n\r\n    function handleChange(e){\r\n        const value = e.target.value;\r\n        setNum(value);\r\n    }\r\n    function handleClick(){\r\n        let c=0;\r\n        if(num === '99999'){\r\n            setRedirect2(true)\r\n        } else {\r\n        for(let i=0;i<props.workers.length;i++){\r\n            if(num === props.workers[i].number){\r\n                c++;\r\n                setName(props.workers[i].name);\r\n                setCounter(props.workers[i].counter + 1)\r\n                setForklift(props.workers[i].forklift);\r\n                console.log(props.workers[i].products)\r\n                if(props.workers[i].products !== ''){\r\n                    props.changedProducts(props.workers[i].products);\r\n                }\r\n                setWelcome(true);\r\n            }\r\n        }\r\n        if(c===0){\r\n            alert(\"This worker isn't excist.\")\r\n        }\r\n    }\r\n    }\r\n    var isShow = <div className=\"col-4\" id=\"box\">\r\n    <h2>Sign Up</h2>\r\n    <Form>\r\n        <Form.Group className=\"row\">\r\n        <Form.Label className=\"col-4 lbl\">NO.</Form.Label>\r\n            <Form.Control className=\"input\" type=\"number\" placeholder=\"Worker Number\" onChange={handleChange} />\r\n        </Form.Group>\r\n        </Form>\r\n    <button className=\"btn2\" onClick={handleClick}>Enter</button>\r\n  </div>;\r\n    if(welcome === true){\r\n        isShow = <div className=\"col-4\" id=\"box\">\r\n            <h2>Welcome {name}</h2>\r\n            <div className=\"row\">\r\n                <div className=\"col-2\"></div>\r\n            <h5>Details:</h5>\r\n            </div><div className=\"row\">\r\n                <div className=\"col-2\"></div>\r\n            <p>Full Name: {name}</p>\r\n            </div><div className=\"row\">\r\n                <div className=\"col-2\"></div>\r\n            <p>No.: {num}</p>\r\n            </div><div className=\"row\">\r\n                <div className=\"col-2\"></div>\r\n            <p>forklift truck license: {forklift}</p>\r\n            </div>\r\n            <h5>List of products</h5>\r\n            {afterFilter.map((element,i)=>{\r\n          return  <div id=\"products\" key ={i}>\r\n              <div className=\"row\">\r\n                <div className=\"col-2\"></div>\r\n              <p>No. {element.number}</p></div>\r\n              <div className=\"row\">\r\n                <div className=\"col-2\"></div>\r\n              <p>name: {element.color}</p></div>\r\n              <div className=\"row\">\r\n                <div className=\"col-2\"></div>\r\n              <p>need forklift truck: {element.forklift}</p></div>\r\n              <button className=\"btn2\" onClick={()=> {\r\n                  if(element.forklift === \"no\"){\r\n                     element.inPlace = true;\r\n                     props.changedProducts(afterFilter)\r\n                  } else {\r\n                      if(forklift === \"yes\"){\r\n                        element.inPlace = true;\r\n                        props.changedProducts(afterFilter)\r\n                      } else {\r\n                          alert('You need a forklift truck license');\r\n                      }\r\n                  }\r\n              }}>Update</button>\r\n          </div>\r\n        })}\r\n        <Link to='/'><button onClick={logedOut} className=\"btn2\">Log Out</button></Link>\r\n      </div>;\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-4\"></div>\r\n          {isShow}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nfunction Manager(props) {    \r\n\r\n    return (\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-4\"></div>\r\n          <div className=\"col-4\" id=\"box\">\r\n            <h2>Manager</h2>\r\n            <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>No.</th>\r\n      <th>Full Name</th>\r\n      <th>Counter</th>\r\n      <th>Number Of Products</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  {props.workers.map((element,i)=>{\r\n      let c = 5-(element.products.length);\r\n    if(i === 0){\r\n        c = '';\r\n    }\r\n          return  <tr key={i}>\r\n              <td>{element.number}</td>\r\n              <td>{element.name}</td>\r\n              <td>{element.counter}</td>\r\n              <td>{c}</td>\r\n          </tr>\r\n        })}\r\n  </tbody>\r\n</Table>\r\n<Link to='/'><button className=\"btn2\">Log Out</button></Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Manager;","import React, {useState} from 'react';\nimport {HashRouter as Router , Route , Switch} from 'react-router-dom';\nimport Enter from './components/Enter';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport Manager from './components/Manager';\nimport './App.css';\n\nfunction App() {\n  const [workers,setWorkers] = useState([\n    {name: '', number: '', forklift: '', products: '', counter: ''}]);\n\n  const [products, setProducts] = useState([\n    {number: 11122 ,color: 'green',forklift: 'no', inPlace: false},\n    {number: 22554 ,color: 'green',forklift: 'no', inPlace: false},\n    {number: 66698 ,color: 'blue',forklift: 'yes', inPlace: false},\n    {number: 78544 ,color: 'red',forklift: 'no', inPlace: false},\n    {number: 69875 ,color: 'red',forklift: 'no', inPlace: false}\n  ])\n\n  const productsArray = [\n    {number: 11122 ,color: 'green',forklift: 'no', inPlace: false},\n    {number: 22554 ,color: 'green',forklift: 'no', inPlace: false},\n    {number: 66698 ,color: 'blue',forklift: 'yes', inPlace: false},\n    {number: 78544 ,color: 'red',forklift: 'no', inPlace: false},\n    {number: 69875 ,color: 'red',forklift: 'no', inPlace: false}\n  ]\n\n  function pushNewWorker(newWorker){\n    setWorkers([...workers,newWorker]);\n  }\n\n  function changedProducts(afterFilter){\nsetProducts(afterFilter);\n  }\n\n  function logedOut(num, afterFilter, counter){\n    for(let i=0; i<workers.length; i++){\n      if(workers[i].number === num){\n        workers[i].products = afterFilter;\n        workers[i].counter = counter;\n      }\n    }\n    setProducts(productsArray)\n  }\n  return (\n\n  <div className=\"App\">\n          <Router>\n         <Switch>\n            <Route exact path=\"/\" render={() => (<Enter />)}/>\n            <Route path=\"/signup\" render={() => (<Signup workers={workers} pushNewWorker={pushNewWorker} />)}/>\n            <Route path=\"/manager\" render={() => (<Manager workers={workers} />)}/>\n            <Route exact path=\"/login\" render={() => (<Login logedOut={logedOut} changedProducts={changedProducts} workers={workers} products={products} />)}/>\n            </Switch> \n            </Router>\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}